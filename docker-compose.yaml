version: "3.8"
services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    expose:
      - 9000
    volumes:
      - .:/usr/src/app
      - ./public:/usr/src/app/public
    depends_on:
      - db
    networks:
      - app_network

  webserver:
    container_name: webserver
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
      - ./public:/usr/src/app/public
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    environment:
      NGINX_FPM_HOST: api
      NGINX_ROOT: /usr/src/app/public
    networks:
      - app_network

  db:
    container_name: db
    image: mysql:8.0.20
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: mysqlwnn_db
      MYSQL_ROOT_PASSWORD: mp89its93g84mqb
      MYSQL_USER: root
      MYSQL_PASSWORD: mp89its93g84mqb
    networks:
      - app_network

  caching:
    container_name: caching
    image: redis:latest
    command: redis-server --appendonly yes --replica-read-only no --requirepass yourredispassword
    volumes:
      - ./data/redis:/data
    ports:
      - 6379:6379
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql-data:
